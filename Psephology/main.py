#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.13
# In conjunction with Tcl version 8.6
#    May 27, 2018 10:34:27 PM
import os
import sys
from tkinter import filedialog
input_file =''
train_file =''
try:
    from tkinter import *
except ImportError:
    from tkinter import *

try:
    import tkinter.ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import kumalGUI_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel (root)
    kumalGUI_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (w)
    kumalGUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'
        self.style = tkinter.ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
        [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("866x524+155+58")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.Frame1 = Frame(top)
        self.Frame1.place(relx=0.0, rely=0.0, relheight=0.68, relwidth=0.77)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")
        self.Frame1.configure(width=665)

        self.Button1 = Button(self.Frame1)
        self.Button1.place(relx=0.36, rely=0.09, height=24, width=69)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Browse''')
        self.Button1.configure(width=69)
        self.Button1.configure(command =self.browsefunc_one)

        self.Text1 = Text(self.Frame1)
        self.Text1.place(relx=0.05, rely=0.09, relheight=0.07, relwidth=0.29)
        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(foreground="black")
        self.Text1.configure(highlightbackground="#d9d9d9")
        self.Text1.configure(highlightcolor="black")
        self.Text1.configure(insertbackground="black")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(selectforeground="black")
        self.Text1.configure(undo="1")
        self.Text1.configure(width=194)
        self.Text1.configure(wrap=WORD)
        self.Text1.configure(state="disable")

        self.Text2 = Text(self.Frame1)
        self.Text2.place(relx=0.05, rely=0.23, relheight=0.07, relwidth=0.29)
        self.Text2.configure(background="white")
        self.Text2.configure(font="TkTextFont")
        self.Text2.configure(foreground="black")
        self.Text2.configure(highlightbackground="#d9d9d9")
        self.Text2.configure(highlightcolor="black")
        self.Text2.configure(insertbackground="black")
        self.Text2.configure(selectbackground="#c4c4c4")
        self.Text2.configure(selectforeground="black")
        self.Text2.configure(undo="1")
        self.Text2.configure(width=194)
        self.Text2.configure(wrap=WORD)
        self.Text2.configure(state="disable")

        self.Button2 = Button(self.Frame1)
        self.Button2.place(relx=0.36, rely=0.23, height=24, width=67)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Browse''')
        self.Button2.configure(width=67)
        self.Button2.configure(command =self.browsefunc_two)

        self.Label1 = Label(self.Frame1)
        self.Label1.place(relx=0.05, rely=0.03, height=24, width=217)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Select .dev file to Convert to POS''')

        self.Label2 = Label(self.Frame1)
        self.Label2.place(relx=0.05, rely=0.17, height=21, width=149)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Select .train file to Train''')

        self.Label3 = Label(self.Frame1)
        self.Label3.place(relx=0.05, rely=0.73, height=24, width=154)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Total Word Count        :''')

        self.Label4 = Label(self.Frame1)
        self.Label4.place(relx=0.05, rely=0.82, height=24, width=157)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Count of stop words    :''')

        self.Scrolledtext2 = ScrolledText(self.Frame1)
        self.Scrolledtext2.place(relx=0.51, rely=0.0, relheight=0.96
                                 , relwidth=0.48)
        self.Scrolledtext2.configure(background="white")
        self.Scrolledtext2.configure(font="TkTextFont")
        self.Scrolledtext2.configure(foreground="black")
        self.Scrolledtext2.configure(highlightbackground="#d9d9d9")
        self.Scrolledtext2.configure(highlightcolor="black")
        self.Scrolledtext2.configure(insertbackground="black")
        self.Scrolledtext2.configure(insertborderwidth="3")
        self.Scrolledtext2.configure(selectbackground="#c4c4c4")
        self.Scrolledtext2.configure(selectforeground="black")
        self.Scrolledtext2.configure(undo="1")
        self.Scrolledtext2.configure(width=10)
        self.Scrolledtext2.configure(wrap=NONE)
        self.Scrolledtext2.configure(state='disabled')


        self.Label5 = Label(self.Frame1)
        self.Label5.place(relx=0.3, rely=0.73, height=21, width=34)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''''')

        self.Label6 = Label(self.Frame1)
        self.Label6.place(relx=0.3, rely=0.82, height=21, width=34)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''''')

        self.Button3 = Button(self.Frame1)
        self.Button3.place(relx=0.39, rely=0.77, height=24, width=57)
        self.Button3.configure(activebackground="#d9d9d9")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''Start''')
        self.Button3.configure(width=57)
        self.Button3.configure(command =self.start_action)



        self.Text3 = Text(self.Frame1)
        self.Text3.place(relx=0.05, rely=0.38, relheight=0.21, relwidth=0.46)
        self.Text3.configure(background="white")
        self.Text3.configure(font="TkTextFont")
        self.Text3.configure(foreground="black")
        self.Text3.configure(highlightbackground="#d9d9d9")
        self.Text3.configure(highlightcolor="black")
        self.Text3.configure(insertbackground="black")
        self.Text3.configure(selectbackground="#c4c4c4")
        self.Text3.configure(selectforeground="black")
        self.Text3.configure(undo="1")
        self.Text3.configure(width=304)
        self.Text3.configure(wrap=WORD)

        self.Button4 = Button(self.Frame1)
        self.Button4.place(relx=0.36, rely=0.62, height=24, width=80)
        self.Button4.configure(activebackground="#d9d9d9")
        self.Button4.configure(activeforeground="#000000")
        self.Button4.configure(background="#d9d9d9")
        self.Button4.configure(disabledforeground="#a3a3a3")
        self.Button4.configure(foreground="#000000")
        self.Button4.configure(highlightbackground="#d9d9d9")
        self.Button4.configure(highlightcolor="black")
        self.Button4.configure(pady="0")
        self.Button4.configure(text='''Insert Text''')
        self.Button4.configure(width=80)
        self.Button4.configure(command =self.insert_manually)

        self.Label7 = Label(self.Frame1)
        self.Label7.place(relx=0.05, rely=0.32, height=21, width=80)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''Insert Text''')

        self.Frame2 = Frame(top)
        self.Frame2.place(relx=0.0, rely=0.67, relheight=0.33, relwidth=0.77)
        self.Frame2.configure(relief=GROOVE)
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief=GROOVE)
        self.Frame2.configure(background="#d9d9d9")
        self.Frame2.configure(highlightbackground="#d9d9d9")
        self.Frame2.configure(highlightcolor="black")
        self.Frame2.configure(width=665)

        self.Scrolledtext1 = ScrolledText(self.Frame2)
        self.Scrolledtext1.place(relx=0.02, rely=0.06, relheight=0.86
                                 , relwidth=0.96)
        self.Scrolledtext1.configure(background="white")
        self.Scrolledtext1.configure(font="TkTextFont")
        self.Scrolledtext1.configure(foreground="black")
        self.Scrolledtext1.configure(highlightbackground="#d9d9d9")
        self.Scrolledtext1.configure(highlightcolor="black")
        self.Scrolledtext1.configure(insertbackground="black")
        self.Scrolledtext1.configure(insertborderwidth="3")
        self.Scrolledtext1.configure(selectbackground="#c4c4c4")
        self.Scrolledtext1.configure(selectforeground="black")
        self.Scrolledtext1.configure(undo="1")
        self.Scrolledtext1.configure(width=10)
        self.Scrolledtext1.configure(wrap=NONE)
        self.Scrolledtext1.configure(state='disabled')

        self.Frame4 = Frame(top)
        self.Frame4.place(relx=0.76, rely=0.0, relheight=1.0, relwidth=0.24)
        self.Frame4.configure(relief=GROOVE)
        self.Frame4.configure(borderwidth="2")
        self.Frame4.configure(relief=GROOVE)
        self.Frame4.configure(background="#d9d9d9")
        self.Frame4.configure(highlightbackground="#d9d9d9")
        self.Frame4.configure(highlightcolor="black")
        self.Frame4.configure(width=205)

        self.Scrolledtext3 = ScrolledText(self.Frame4)
        self.Scrolledtext3.place(relx=0.0, rely=0.0, relheight=1.01
                                 , relwidth=0.97)
        self.Scrolledtext3.configure(background="white")
        self.Scrolledtext3.configure(font="TkTextFont")
        self.Scrolledtext3.configure(foreground="black")
        self.Scrolledtext3.configure(highlightbackground="#d9d9d9")
        self.Scrolledtext3.configure(highlightcolor="black")
        self.Scrolledtext3.configure(insertbackground="black")
        self.Scrolledtext3.configure(insertborderwidth="3")
        self.Scrolledtext3.configure(selectbackground="#c4c4c4")
        self.Scrolledtext3.configure(selectforeground="black")
        self.Scrolledtext3.configure(width=10)
        self.Scrolledtext3.configure(wrap=NONE)
        self.Scrolledtext3.insert(END, '''NN  -  Noun
NNP - Proper Noun
PRP - Pronoun
VAUX- Verb Auxiliary
JJ -  Adjective
RB -  Adverb
RP - Particle
CC -  Conjuncts
VH -  Interjection
PREP- Postposition
QF -  Quantifiers
QFNUM-Number
VFM -  Verb Finite math
VJJ -  Verb Non-Finite Adjectival
VRB -  Verb Non-Finite Adverbial
VNN -  verb Non-Finite Nominal
QW -  Question words
NLOC -  Noun Location
INTF  -  Intensifier
NEG   -  Negative
NNC  -  Compound Nouns
NNPC  -  Compound Proper Nouns
NVB , JVB , RBVB -  Light verbs
SYM -  Special''')
        self.Scrolledtext3.configure(state='disabled')



    def browsefunc_one(self):
        # Analyzing input data set
        global input_file
        input_file = filedialog.askopenfilename(filetypes =(("Text File", "*.txt"),("Dev File", "*.dev"),("Train File", "*.train"),("OUTPUT File", "*.output"),("All Files","*.*")))
        self.Text1.configure(state="normal")
        self.Text1.insert(END,input_file)
        self.Text1.configure(state="disable")


    # Input training dataset
    def browsefunc_two(self):
        global train_file
        train_file = filedialog.askopenfilename(filetypes =(("Text File", "*.txt"),("Dev File", "*.dev"),("Train File", "*.train"),("OUTPUT File", "*.output"),("All Files","*.*")))
        self.Text2.configure(state="normal")
        self.Text2.insert(END,train_file)
        self.Text2.configure(state="disable")


#Insert manually
    def insert_manually(self):
        insert = self.Text3.get("1.0",'end-1c')

#start button commands
    def start_action(self):
        os.system('python count_freqs.py '+train_file+' > sinhala.counts')
        os.system('python tagger.py TAG1 sinhala.counts ' +input_file+ ' > sinhala.output')
        # print(train_file)
        myfile = open('sinhala.output', encoding="utf8")
        p = myfile.read().split()
        # print(p);
        self.Scrolledtext2.configure(state='normal')
        for line in myfile:
            x = line.replace("\n", '\n')
            self.Scrolledtext2.insert(END, x)

        for line in p:
            wordcount = len(p)
            # sentences = line.count('.') + line.count('!') + line.count('?')
        self.Label5.configure(text=wordcount)
        # print(sentences)

        new_sentence = ""

        index = 0

        for word in p:

            if index % 2 == 1:
                new_sentence += word + " "

            index += 1

        # remove the last space at the end
        p = p[:-1]
        from collections import Counter
        similar = Counter(new_sentence.split())
        self.Scrolledtext1.configure(state='normal')
        for item in list(similar.items()):
            # print("{}\t{}".format(*item))
            self.Scrolledtext2.insert(END, "{}\t{}\n".format(*item))

        self.Scrolledtext2.configure(state='disable')
        self.Scrolledtext1.insert(END, p)
        self.Scrolledtext1.configure(state='disable')
        myfile.close()





# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''

    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = tkinter.ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = tkinter.ttk.Scrollbar(master, orient='horizontal', command=self.xview)

        #self.configure(yscrollcommand=_autoscroll(vsb),
        #    xscrollcommand=_autoscroll(hsb))
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))

        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')

        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)

        # Copy geometry methods of master  (taken from ScrolledText.py)
        if py3:
            methods = list(Pack.__dict__.keys()) | list(Grid.__dict__.keys()) \
                      | list(Place.__dict__.keys())
        else:
            methods = list(Pack.__dict__.keys()) + list(Grid.__dict__.keys()) \
                      + list(Place.__dict__.keys())

        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = tkinter.ttk.Frame(master)
        return func(cls, container, **kw)
    return wrapped

class ScrolledText(AutoScroll, Text):
    '''A standard Tkinter Text widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        Text.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

if __name__ == '__main__':
    vp_start_gui()